#!/bin/sh
# Test whether .ctors or .init_array is generated by the compiler
# Copyright (C) 2012 Kyle McMartin <kmcmarti@redhat.com>

j=`mktemp ./.tmp.XXXXXX.o`

cat <<EOF | $@ -x c -c -o $j >/dev/null 2>&1
/* Test whether the compiler will produce .ctors/.dtors sections, or move
 * them into .{init,fini}_array.
 *
 * Necessary in order to figure out what section gcov data will end up in,
 * which is dependent on both the compiler version, the linker version
 * used to build the compiler and configure flags passed to the gcc build
 * (--enable-initfini-array)
 *
 * Inspired by a test in the gcc aclocal.m4, which was replaced by a linker
 * test in the 4.7 branch (and --enable-initfini-array made the default if
 * ld is capable of it.)
 *
 * Copyright (C) 2011 H.J. Lu  <hongjiu.lu@intel.com>
 * Copyright (C) 2012 Kyle McMartin <kmcmarti@redhat.com>
 *
 */

#include <stdio.h>

static int count;

static inline void fail()
{
	printf("FAIL (%d)\n", count);
}

#define INIT(a,x,y,z)					\
static void a##x()					\
{							\
	if (count != y)					\
		fail();					\
	count = x;					\
}							\
void (* const a##_array##x[])()				\
	__attribute__((section( z ),			\
	aligned(sizeof (void *))))			\
	= { a##x };

INIT(init,1005,0,".init_array.01005")
INIT(ctor,1007,1005,".ctors.64528")
INIT(init,65530,1007,".init_array.65530")
INIT(ctor,65535,65530,".ctors")

#define FINI(a,x,y,z)					\
static void a##x()					\
{							\
	if (count != x)					\
		fail();					\
	count = y;					\
}							\
void (* const a##_array##x[])()				\
	__attribute__((section( z ),			\
	aligned(sizeof (void *))))			\
	= { a##x };

FINI(fini,1005,0,".fini_array.01005")
FINI(dtor,1007,1005,".dtors.64528")
FINI(fini,65530,1007,".fini_array.65530")
FINI(dtor,65535,65530,".dtors")

int main(void)
{
	if (count != 65535)
		fail();
	return 0;
}
EOF

( ${CROSS_COMPILE}objdump -t -j .ctors $j 2>&1 2>&1 | grep -q "not found" ) && echo y
